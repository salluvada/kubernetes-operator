language: go
os: linux

env:
  global:
    - GO111MODULE=on
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - KUBECONFIG=$HOME/.kube/config

go:
  - 1.13.x

before_install:
  - |
    if [ "$TRAVIS_PULL_REQUEST" = "true" ]; then
      # Pull requests are slightly complicated because $TRAVIS_COMMIT_RANGE
      # may include more changes than desired if the history is convoluted.
      # Instead, explicitly fetch the base branch and compare against the
      # merge-base commit.
      git fetch -q origin +refs/heads/$TRAVIS_BRANCH
      changes=$(git diff --name-only HEAD $(git merge-base HEAD FETCH_HEAD))
    else
      changes=$(git diff --name-only $TRAVIS_COMMIT_RANGE)
    fi
    echo "Files changed:"
    echo "$changes"
    if ! echo "$changes" | grep -qvE '(\.md$)|(^(docs|website))/'
    then
      echo "Only docs were updated, stopping build process."
      exit
    fi
  - make go-dependencies

jobs:
  include:
    - stage: unit
      name: "Jenkins Operator - unit tests"
      script:
        - travis_wait 15 make verify
    - stage: e2e
      name: "Backup PVC - e2e"
      script:
        - travis_wait 10 make -C backup/pvc/ docker-e2e UID=$(id -u) GID=$(id -g)
    - stage: e2e
      name: "Jenkins Operator - e2e"
      script:
        - sudo apt-get update
        - sudo apt-get install socat
        - travis_wait 10 make travis-prepare
        - travis_wait 45 make build e2e

cache:
  directories:
    - vendor
    - /home/travis/.minikube/

notifications:
  slack:
    secure: Cke1jTwG9TE7/Oe4dXYPnu3fO49NbrqZX6S75hv6LKwoclTHG2rwjZXEFqpn7g7o1au743lzj12RyeosSWIYA0jN8xU3WHrJApUBq3oOr/oG0Br9jr4EyonWkcwjnpGUZ8UehvYaMZCSRLr2a2ZEShai2ftrYd5CEd066986NEG+Q/dnxhkmWPk7CW37bm5I3duW62mW/QGi3iIzNOSNJtMjbYFP2USHrnEoV2KZ9irKLpBNSyxqVH820FvTUjp+imisP4v27m/dSyuZzbWsc6BGtL+CTwMHMuJVUfTOGpTjW4H9qb42kZO3zFuFdP235Zo+Uxx+OA14n3wNdSgseAEuX6ecMnbglK95ZL/lm5p5wPH/F+05Xu9dh3bqCex9VIjcszzTj/ZJ+mDjMd11nSU++Dbr7e1ynTii+B6tOpiuFGzW5n4yPEjwdrMakohRM+Pukp2fSCQf8YfSutbfTqaYLuTl5UV+kKN4QlAgCyZokSq1tGJ/H21ScI09reJPinM565J9h4Nbkul50XD5pcktBsq9gyLCzJDyG1sNWPOyHV1lG8PsAEGKoCG9+PlP7L48e+QfUuQO9fNM00sjgVHxkXBVqBNMI/UDhlqVgDx4S+WFQivwS894XZNLDwrzXpTfswzMbd08EevyyT1fqbZEIX83V2B0H7A8Oxrb7nM=
